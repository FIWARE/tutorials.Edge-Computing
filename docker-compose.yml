version: "3.5"
services:     
    designer:
        image: fogflow/designer:3.0
        volumes:
            - ./config.json:/app/config.json                
        ports:
            - 8080:8080
            - 1030:1030
        depends_on: 
            - discovery
            - cloud_broker
        restart: always
            
    discovery:
        image: fogflow/discovery:3.0
        volumes:
            - ./config.json:/config.json                        
        ports:
            - 8090:8090
        restart: always

    master:
        image: fogflow/master:3.0
        volumes:
            - ./config.json:/config.json                                   
        links:
            - rabbitmq        
        ports:
            - 1060:1060 
        depends_on: 
            - rabbitmq
            - discovery
            - cloud_broker     
        restart: always 
        
    cloud_broker:
        image: fogflow/broker:3.0
        volumes:
            - ./config.json:/config.json 
        ports:
            - 8070:8070
        depends_on: 
            - discovery
        restart: always     
                                        
    cloud_worker:
        image: fogflow/worker:3.0
        volumes:
            - /tmp:/tmp        
            - ./config.json:/config.json                            
            - /var/run/docker.sock:/var/run/docker.sock      
        depends_on: 
            - cloud_broker
            - rabbitmq
        restart: always
                                        
    rabbitmq:
        image: rabbitmq:3
        ports:
            - 5672:5672
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=mypass   
        restart: always
        
    nginx: 
        image: nginx:latest
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
        depends_on: 
            - discovery    
            - cloud_broker
            - designer
        restart: always

# Change the environment variables IOTA_CB_HOST and IOTA_PROVIDER_URL to run IoT Agent on Fogflow Cloud Node.
# IoT Agent will use embedded mongodb, i.e., mongodb will be running on localhost.
    iot-agent:
        image: fogflow/iotajson-mongo
        hostname: iot-agent
        container_name: iot-agent-json
        networks:
          - default
        expose:
          - "4041"
          - "7896"
        ports:
          - "4041:4041"
          - "7896:7896"
        environment:
          - IOTA_CB_HOST=<Cloud_Broker_Public_IP> # Public IP of Fogflow Cloud Broker
          - IOTA_CB_PORT=8070 # The port of Fogflow Cloud Broker is listening on
          - IOTA_NORTH_PORT=4041
          - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
          - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
          - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
          - IOTA_CB_NGSI_VERSION=v1 # use NGSIv2 when sending updates for active attributes
          - IOTA_MONGO_HOST=localhost # The host name of MongoDB
          - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
          - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
          - IOTA_HTTP_PORT=7896 # The port used for device traffic over HTTP
          - IOTA_PROVIDER_URL=http://<Cloud_Public_IP>:4041 # URL for the IoT Agent to be deployed
          - IOTA_DEFAULT_RESOURCE=/iot/json

    elasticsearch:
        image: fogflow/elasticsearch:latest
        ports:
          - "9200:9200"
          - "9300:9300"
        environment:
          - discovery.type=single-node
    
    metricbeat:
        image: fogflow/metricbeat:latest
        user: root
        volumes:
          - ./metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
          - /var/run/docker.sock:/var/run/docker.sock
          - /sys/fs/cgroup:/hostfs/sys/fs/cgroup
          - /proc:/hostfs/proc
          - /:/hostfs
        environment:
          - output.elasticsearch.hosts= ["<Elasticsearch_Host_IP>:9200"]
    
    grafana:
        image: grafana/grafana:6.5.0
        links:
          - elasticsearch
        environment:
          - GF_SECURITY_ADMIN_PASSWORD=admin
        depends_on:
          - elasticsearch
        ports:
          - "3003:3000"
        restart: always
